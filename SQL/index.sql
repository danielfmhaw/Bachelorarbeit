CREATE TABLE IF NOT EXISTS KUNDEN (
    KUNDEN_ID     INT PRIMARY KEY,
    NAME          VARCHAR(255),
    GEBURTSTAG    DATE,
    ADRESSE       VARCHAR(255),
    STADT         VARCHAR(100),
    POSTLEITZAHL  VARCHAR(10),
    LAND          VARCHAR(100),
    EMAIL         VARCHAR(255) UNIQUE,
    TELEFONNUMMER VARCHAR(20)
);
DROP TABLE KUNDEN;
DROP VIEW KUNDEN_OVERVIEW;

CREATE INDEX idx_stadt ON KUNDEN(STADT);
CREATE INDEX idx_postleitzahl ON KUNDEN(POSTLEITZAHL);
CREATE INDEX idx_geburtstag ON KUNDEN(GEBURTSTAG);

DROP INDEX idx_stadt ON KUNDEN;
DROP INDEX idx_postleitzahl ON KUNDEN;
DROP INDEX idx_geburtstag ON KUNDEN;
DROP INDEX idx_name ON KUNDEN;

CREATE INDEX combined_index ON KUNDEN(NAME, VORNAME, GEBURTSTAG);
DROP INDEX combined_index ON KUNDEN;
CREATE INDEX combined_index
    ON KUNDEN (NAME, VORNAME, GEBURTSTAG);
USING HASH;

SELECT * FROM KUNDEN;
SELECT * FROM KUNDEN WHERE CAST(SUBSTRING(STADT, 6) AS UNSIGNED) > 9;
SELECT COUNT(*) as count  FROM KUNDEN;

EXPLAIN SELECT * FROM KUNDEN WHERE NAME LIKE 'M%'; -- columm_prefix
EXPLAIN SELECT * FROM KUNDEN WHERE NAME = 'Müller' AND VORNAME = 'Max' AND GEBURTSTAG < '1980-01-01'; -- combined_match_with_range
EXPLAIN SELECT * FROM KUNDEN WHERE NAME = 'Müller' AND VORNAME LIKE 'M%' ORDER BY GEBURTSTAG; -- exact_with_prefix
EXPLAIN SELECT * FROM KUNDEN WHERE NAME = 'Müller' AND VORNAME = 'Max' AND GEBURTSTAG = '1960-01-01'; -- full_match
EXPLAIN SELECT * FROM KUNDEN WHERE NAME = 'Müller'; -- leftmost_prefix
EXPLAIN SELECT * FROM KUNDEN WHERE GEBURTSTAG < '1980-01-01'; -- not_leftmost
EXPLAIN SELECT * FROM KUNDEN WHERE NAME BETWEEN 'Müller' AND 'Schulz'; -- range_values
EXPLAIN SELECT * FROM KUNDEN WHERE NAME = 'Müller' AND VORNAME LIKE 'M%' AND GEBURTSTAG < '1980-01-01'; -- range_with_like
EXPLAIN SELECT * FROM KUNDEN WHERE NAME = 'Müller' AND GEBURTSTAG < '1980-01-01'; -- skip_columns