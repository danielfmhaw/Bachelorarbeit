name: Run All Benchmarks
on:
  push:
    paths: ['Projects/**', ...]
jobs:
  prepare-benchmark:
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      configurations: ${{ steps.prepare-config.outputs.configurations }}
    steps:
      - { name: Checkout repository, uses: actions/checkout@v3 }
      - name: Read and generate list of matrix name  #  echo "matrix=$matrix" >> $GITHUB_OUTPUT
      - name: Prepare configurations for all test types
        run: # ... export variables like  test_type, dirs, var, output_dir, artifact_name as "configurations"
  run-tests:
    needs: prepare-benchmark
    strategy:
      matrix:
        test-type: ${{ fromJson(needs.prepare-benchmark.outputs.matrix) }}
    env: { TIME: 32, THREADS: 1, EVENTS: 0, REPORT_INTERVAL: 2 }
    steps:
      - { name: Checkout repository, uses: actions/checkout@v3 }
      - name: Extract and save values to GitHub environment
      - name: Install dependencies (sysbench, pandas, matplotlib)
      - name: Start MySQL container (and wait for it to be ready)
        run: |
          docker run --name mysql-${{ env.test_type }} -d -e MYSQL_ROOT_PASSWORD=$DB_PASS -e MYSQL_DATABASE=$DB_NAME -p $DB_PORT:3306 mysql:8.0
      - name: Run sysbench script
        run: |
          chmod +x Tools/Shell-Scripts/sysbench_script.sh
          Tools/Shell-Scripts/sysbench_script.sh -out "${{ env.output_dir }}" \
          -var '${{ env.var }}' -scripts:'${{ env.dirs }}'
      - name: Stop MySQL and PostgreSQL containers
      - name: Upload outputs # with actions/upload-artifact@v4
  upload-combined-output:
    needs: [prepare-benchmark, run-tests]
    steps:
      - name: Loop through configurations, download artifacts with artifact_name and unzip it
        run: # ... ALL_ARTIFACTS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/actions/artifacts") ...
      - name: Upload "Output"-folder with all downloaded benchmarks as one artifact named "combined-output"